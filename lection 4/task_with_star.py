# Задача со ЗВЁЗДОЧКОЙ. Решать НЕ обязательно.
# Программа получает на вход натуральное число num.
# Программа должна вывести другое натуральное число, удовлетворяющее условиям:
# Новое число должно отличаться от данного ровно одной цифрой
# Новое число должно столько же знаков как исходное
# Новое число должно делиться на 3
# Новое число должно быть максимально возможным из всех таких чисел
# Например (Ввод --> Вывод) :
#
# 379 --> 879
# 15 --> 75
# 4974 --> 7974

def max_division_by_3(num):
    new_num2 = []
    new_num = []
    if num == 0 and len(str(num)) == 1:
        new_num2.append(0)
    while num > 0:
        new_num2.append(num % 10)
        num //= 10
    new_num2 = list(reversed(new_num2))
    for ind, value in enumerate(new_num2):
        n = 9
        while n != value:
            lst = new_num2[:ind] + new_num2[ind+1:]
            lst.insert(ind, n)
            if sum(lst) % 3 == 0:
                new_num = int(''.join(map(str, lst)))
                return new_num  # не нашел другого способа выйти из двух циклов :(
            n -= 1
    return new_num

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    379, 810, 981, 4974, 996, 9000, 15, 0, 9881, 9984, 9876543210, 98795432109879543210
]

test_data = [
    879, 870, 987, 7974, 999, 9900, 75, 9, 9981, 9987, 9879543210, 98798432109879543210
]


for i, d in enumerate(data):
    assert max_division_by_3(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
